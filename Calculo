import pandas as pd
from datetime import datetime, timedelta

# Caminho do arquivo Excel no diretório atual
file_path = './backtest.xlsx'  # Ajuste conforme a localização do seu arquivo

# Função para calcular as horas úteis dentro do expediente (8h - 18h)
def working_hours(start, end):
    start_time = start.replace(hour=8, minute=0, second=0, microsecond=0)
    end_time = start.replace(hour=18, minute=0, second=0, microsecond=0)

    if start > end_time:
        return 0
    if start < start_time:
        start = start_time
    if end < start_time:
        return 0
    if end > end_time:
        end = end_time

    return (end - start).total_seconds() / 3600  # Retorna horas

# Função para calcular o tempo total de atendimento em horário útil, ignorando finais de semana
def calculate_working_time(row):
    abertura = pd.to_datetime(row['Data de abertura'], format='%d/%m/%Y %H:%M')
    if pd.isna(row['Data da solução']):
        solucoes = datetime.now()  # Se não houver solução, usa a data atual
    else:
        solucoes = pd.to_datetime(row['Data da solução'], format='%d/%m/%Y %H:%M')

    total_hours = 0

    # Itera sobre os dias entre abertura e solução
    while abertura.date() < solucoes.date():
        if abertura.weekday() < 5:  # Ignora finais de semana
            next_day = abertura + timedelta(days=1)
            total_hours += working_hours(abertura, next_day)
        abertura = abertura + timedelta(days=1)
        abertura = abertura.replace(hour=8, minute=0)  # Reinicia às 08:00 no próximo dia útil

    # Adiciona horas do último dia (ou mesmo dia)
    if abertura.weekday() < 5:
        total_hours += working_hours(abertura, solucoes)

    # Converte para formato h:m
    hours = int(total_hours)
    minutes = int((total_hours - hours) * 60)
    return f"{hours}:{minutes:02d}"

# Lê o arquivo Excel para um DataFrame
df = pd.read_excel(file_path)

# Calcula o tempo de atendimento para cada linha
df['Tempo em atendimento'] = df.apply(calculate_working_time, axis=1)

# (Opcional) Salvar resultado em um novo arquivo Excel
df.to_excel('./resultado_automatizacao.xlsx', index=False)

print("Cálculo realizado e armazenado com sucesso")

